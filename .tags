!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Numeric	bin/git/git-wtf	/^class Numeric; def pluralize s; "#{to_s} #{s}" + (self != 1 ? "s" : "") end end$/;"	c
SessionLoad	.vim/sessions/default.vim	/^let SessionLoad = 1$/;"	v
__git_aliased_command	bin/git/git-completion.bash	/^__git_aliased_command ()$/;"	f
__git_aliases	bin/git/git-completion.bash	/^__git_aliases ()$/;"	f
__git_commands	bin/git/git-completion.bash	/^__git_commands () {$/;"	f
__git_complete	bin/git/git-completion.bash	/^__git_complete ()$/;"	f
__git_complete_file	bin/git/git-completion.bash	/^__git_complete_file ()$/;"	f
__git_complete_force_with_lease	bin/git/git-completion.bash	/^__git_complete_force_with_lease ()$/;"	f
__git_complete_index_file	bin/git/git-completion.bash	/^__git_complete_index_file ()$/;"	f
__git_complete_remote_or_refspec	bin/git/git-completion.bash	/^__git_complete_remote_or_refspec ()$/;"	f
__git_complete_revlist	bin/git/git-completion.bash	/^__git_complete_revlist ()$/;"	f
__git_complete_revlist_file	bin/git/git-completion.bash	/^__git_complete_revlist_file ()$/;"	f
__git_complete_strategy	bin/git/git-completion.bash	/^__git_complete_strategy ()$/;"	f
__git_compute_all_commands	bin/git/git-completion.bash	/^__git_compute_all_commands ()$/;"	f
__git_compute_merge_strategies	bin/git/git-completion.bash	/^__git_compute_merge_strategies ()$/;"	f
__git_compute_porcelain_commands	bin/git/git-completion.bash	/^__git_compute_porcelain_commands ()$/;"	f
__git_config_get_set_variables	bin/git/git-completion.bash	/^__git_config_get_set_variables ()$/;"	f
__git_count_arguments	bin/git/git-completion.bash	/^__git_count_arguments ()$/;"	f
__git_find_on_cmdline	bin/git/git-completion.bash	/^__git_find_on_cmdline ()$/;"	f
__git_func_wrap	bin/git/git-completion.bash	/^__git_func_wrap ()$/;"	f
__git_get_config_variables	bin/git/git-completion.bash	/^__git_get_config_variables ()$/;"	f
__git_get_option_value	bin/git/git-completion.bash	/^__git_get_option_value ()$/;"	f
__git_has_doubledash	bin/git/git-completion.bash	/^__git_has_doubledash ()$/;"	f
__git_heads	bin/git/git-completion.bash	/^__git_heads ()$/;"	f
__git_index_files	bin/git/git-completion.bash	/^__git_index_files ()$/;"	f
__git_list_all_commands	bin/git/git-completion.bash	/^__git_list_all_commands ()$/;"	f
__git_list_merge_strategies	bin/git/git-completion.bash	/^__git_list_merge_strategies ()$/;"	f
__git_list_porcelain_commands	bin/git/git-completion.bash	/^__git_list_porcelain_commands ()$/;"	f
__git_ls_files_helper	bin/git/git-completion.bash	/^__git_ls_files_helper ()$/;"	f
__git_main	bin/git/git-completion.bash	/^__git_main ()$/;"	f
__git_match_ctag	bin/git/git-completion.bash	/^__git_match_ctag() {$/;"	f
__git_pretty_aliases	bin/git/git-completion.bash	/^__git_pretty_aliases ()$/;"	f
__git_reassemble_comp_words_by_ref	bin/git/git-completion.bash	/^__git_reassemble_comp_words_by_ref()$/;"	f
__git_refs	bin/git/git-completion.bash	/^__git_refs ()$/;"	f
__git_refs2	bin/git/git-completion.bash	/^__git_refs2 ()$/;"	f
__git_refs_remotes	bin/git/git-completion.bash	/^__git_refs_remotes ()$/;"	f
__git_remotes	bin/git/git-completion.bash	/^__git_remotes ()$/;"	f
__git_tags	bin/git/git-completion.bash	/^__git_tags ()$/;"	f
__gitcomp	bin/git/git-completion.bash	/^	__gitcomp ()$/;"	f
__gitcomp	bin/git/git-completion.bash	/^__gitcomp ()$/;"	f
__gitcomp_file	bin/git/git-completion.bash	/^	__gitcomp_file ()$/;"	f
__gitcomp_file	bin/git/git-completion.bash	/^__gitcomp_file ()$/;"	f
__gitcomp_nl	bin/git/git-completion.bash	/^	__gitcomp_nl ()$/;"	f
__gitcomp_nl	bin/git/git-completion.bash	/^__gitcomp_nl ()$/;"	f
__gitcomp_nl_append	bin/git/git-completion.bash	/^__gitcomp_nl_append ()$/;"	f
__gitcompadd	bin/git/git-completion.bash	/^__gitcompadd ()$/;"	f
__gitcompappend	bin/git/git-completion.bash	/^__gitcompappend ()$/;"	f
__gitdir	bin/git/git-completion.bash	/^__gitdir ()$/;"	f
__gitk_main	bin/git/git-completion.bash	/^__gitk_main ()$/;"	f
_fzf_compgen_dir	zsh/.fzf.zsh	/^_fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	zsh/.fzf.zsh	/^_fzf_compgen_path() {$/;"	f
_get_comp_words_by_ref	bin/git/git-completion.bash	/^_get_comp_words_by_ref ()$/;"	f
_git	bin/git/git-completion.bash	/^	_git ()$/;"	f
_git	bin/git/git-completion.bash	/^_git ()$/;"	f
_git_add	bin/git/git-completion.bash	/^_git_add ()$/;"	f
_git_am	bin/git/git-completion.bash	/^_git_am ()$/;"	f
_git_apply	bin/git/git-completion.bash	/^_git_apply ()$/;"	f
_git_archive	bin/git/git-completion.bash	/^_git_archive ()$/;"	f
_git_bisect	bin/git/git-completion.bash	/^_git_bisect ()$/;"	f
_git_branch	bin/git/git-completion.bash	/^_git_branch ()$/;"	f
_git_bundle	bin/git/git-completion.bash	/^_git_bundle ()$/;"	f
_git_checkout	bin/git/git-completion.bash	/^_git_checkout ()$/;"	f
_git_cherry	bin/git/git-completion.bash	/^_git_cherry ()$/;"	f
_git_cherry_pick	bin/git/git-completion.bash	/^_git_cherry_pick ()$/;"	f
_git_clean	bin/git/git-completion.bash	/^_git_clean ()$/;"	f
_git_clone	bin/git/git-completion.bash	/^_git_clone ()$/;"	f
_git_commit	bin/git/git-completion.bash	/^_git_commit ()$/;"	f
_git_config	bin/git/git-completion.bash	/^_git_config ()$/;"	f
_git_describe	bin/git/git-completion.bash	/^_git_describe ()$/;"	f
_git_diff	bin/git/git-completion.bash	/^_git_diff ()$/;"	f
_git_difftool	bin/git/git-completion.bash	/^_git_difftool ()$/;"	f
_git_fetch	bin/git/git-completion.bash	/^_git_fetch ()$/;"	f
_git_format_patch	bin/git/git-completion.bash	/^_git_format_patch ()$/;"	f
_git_fsck	bin/git/git-completion.bash	/^_git_fsck ()$/;"	f
_git_gc	bin/git/git-completion.bash	/^_git_gc ()$/;"	f
_git_gitk	bin/git/git-completion.bash	/^_git_gitk ()$/;"	f
_git_grep	bin/git/git-completion.bash	/^_git_grep ()$/;"	f
_git_help	bin/git/git-completion.bash	/^_git_help ()$/;"	f
_git_init	bin/git/git-completion.bash	/^_git_init ()$/;"	f
_git_log	bin/git/git-completion.bash	/^_git_log ()$/;"	f
_git_ls_files	bin/git/git-completion.bash	/^_git_ls_files ()$/;"	f
_git_ls_remote	bin/git/git-completion.bash	/^_git_ls_remote ()$/;"	f
_git_ls_tree	bin/git/git-completion.bash	/^_git_ls_tree ()$/;"	f
_git_merge	bin/git/git-completion.bash	/^_git_merge ()$/;"	f
_git_merge_base	bin/git/git-completion.bash	/^_git_merge_base ()$/;"	f
_git_mergetool	bin/git/git-completion.bash	/^_git_mergetool ()$/;"	f
_git_mv	bin/git/git-completion.bash	/^_git_mv ()$/;"	f
_git_name_rev	bin/git/git-completion.bash	/^_git_name_rev ()$/;"	f
_git_notes	bin/git/git-completion.bash	/^_git_notes ()$/;"	f
_git_pull	bin/git/git-completion.bash	/^_git_pull ()$/;"	f
_git_push	bin/git/git-completion.bash	/^_git_push ()$/;"	f
_git_rebase	bin/git/git-completion.bash	/^_git_rebase ()$/;"	f
_git_reflog	bin/git/git-completion.bash	/^_git_reflog ()$/;"	f
_git_remote	bin/git/git-completion.bash	/^_git_remote ()$/;"	f
_git_replace	bin/git/git-completion.bash	/^_git_replace ()$/;"	f
_git_reset	bin/git/git-completion.bash	/^_git_reset ()$/;"	f
_git_revert	bin/git/git-completion.bash	/^_git_revert ()$/;"	f
_git_rm	bin/git/git-completion.bash	/^_git_rm ()$/;"	f
_git_send_email	bin/git/git-completion.bash	/^_git_send_email ()$/;"	f
_git_shortlog	bin/git/git-completion.bash	/^_git_shortlog ()$/;"	f
_git_show	bin/git/git-completion.bash	/^_git_show ()$/;"	f
_git_show_branch	bin/git/git-completion.bash	/^_git_show_branch ()$/;"	f
_git_stage	bin/git/git-completion.bash	/^_git_stage ()$/;"	f
_git_stash	bin/git/git-completion.bash	/^_git_stash ()$/;"	f
_git_status	bin/git/git-completion.bash	/^_git_status ()$/;"	f
_git_submodule	bin/git/git-completion.bash	/^_git_submodule ()$/;"	f
_git_svn	bin/git/git-completion.bash	/^_git_svn ()$/;"	f
_git_tag	bin/git/git-completion.bash	/^_git_tag ()$/;"	f
_git_whatchanged	bin/git/git-completion.bash	/^_git_whatchanged ()$/;"	f
_git_worktree	bin/git/git-completion.bash	/^_git_worktree ()$/;"	f
_gitk	bin/git/git-completion.bash	/^_gitk ()$/;"	f
ahead_behind_string	bin/git/git-wtf	/^def ahead_behind_string ahead, behind$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
commits_between	bin/git/git-wtf	/^def commits_between from, to$/;"	f	class:red.green.yellow.cyan.grey.purple
cyan	bin/git/git-wtf	/^def cyan s; $color ? "\\033[36m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow
find_file	bin/git/git-wtf	/^def find_file fn$/;"	f	class:Numeric
fzf_gb	zsh/.fzf.git.zsh	/^fzf_gb() {$/;"	f
fzf_gf	zsh/.fzf.git.zsh	/^fzf_gf() {$/;"	f
fzf_gh	zsh/.fzf.git.zsh	/^fzf_gh() {$/;"	f
fzf_gr	zsh/.fzf.git.zsh	/^fzf_gr() {$/;"	f
fzf_gt	zsh/.fzf.git.zsh	/^fzf_gt() {$/;"	f
fzf_is_in_git_repo	zsh/.fzf.git.zsh	/^fzf_is_in_git_repo() {$/;"	f
green	bin/git/git-wtf	/^def green s; $color ? "\\033[32m#{s}\\033[0m" : s end$/;"	f	class:red
grey	bin/git/git-wtf	/^def grey s; $color ? "\\033[1;30m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow.cyan
possibly	bin/git/branch	/^function possibly-pull {$/;"	f
processLines	bin/memory-mac	/^processLines = ps.split('\\n')$/;"	v
ps	bin/memory-mac	/^ps = subprocess.Popen(['ps', '-caxm', '-orss,comm'], stdout=subprocess.PIPE).communicate()[0].decode()$/;"	v
purple	bin/git/git-wtf	/^def purple s; $color ? "\\033[35m#{s}\\033[0m" : s end$/;"	f	class:red.green.yellow.cyan.grey
re	bin/memory-mac	/^import re$/;"	i
red	bin/git/git-wtf	/^def red s; $color ? "\\033[31m#{s}\\033[0m" : s end$/;"	f
rowElements	bin/memory-mac	/^    rowElements = sep.split(rowText)$/;"	v
rowText	bin/memory-mac	/^    rowText = processLines[row].strip()$/;"	v
rowText	bin/memory-mac	/^    rowText = vmLines[row].strip()$/;"	v
rss	bin/memory-mac	/^        rss = 0 # ignore...$/;"	v
rss	bin/memory-mac	/^        rss = float(rowElements[0]) * 1024$/;"	v
rssTotal	bin/memory-mac	/^rssTotal = 0 # kB$/;"	v
s:so_save	.vim/sessions/default.vim	/^let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1$/;"	v
s:sx	.vim/sessions/default.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	.vim/sessions/default.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:wipebuflines	.vim/sessions/default.vim	/^  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')$/;"	v
sep	bin/memory-mac	/^sep = re.compile(':[\\s]+')$/;"	v
sep	bin/memory-mac	/^sep = re.compile('[\\s]+')$/;"	v
show	bin/git/git-wtf	/^def show b$/;"	f	class:red.green.yellow.cyan.grey
show_commits	bin/git/git-wtf	/^def show_commits commits, prefix="    "$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
show_relations	bin/git/git-wtf	/^def show_relations b, all_branches$/;"	f	class:red.green.yellow.cyan
subprocess	bin/memory-mac	/^import subprocess$/;"	i
vm	bin/memory-mac	/^vm = subprocess.Popen(['vm_stat'], stdout=subprocess.PIPE).communicate()[0].decode()$/;"	v
vmLines	bin/memory-mac	/^vmLines = vm.split('\\n')$/;"	v
vmStats	bin/memory-mac	/^vmStats = {}$/;"	v
widget	bin/git/git-wtf	/^def widget merged_in, remote_only=false, local_only=false, local_only_merge=false$/;"	f	class:red.green.yellow.cyan.grey.purple.commits_between
yellow	bin/git/git-wtf	/^def yellow s; $color ? "\\033[33m#{s}\\033[0m" : s end$/;"	f	class:red.green
